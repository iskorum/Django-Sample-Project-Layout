# this file must be placed in /etc/nginx/sites-available/ (generally) and named properly.
# and a link to /etc/nginx/sites-enabled/

upstream {{ project_name }} {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response (in case the Unicorn master nukes a
  # single worker for timing out).

  server unix:/var/www/{{ project_name }}/production/gunicorn.sock fail_timeout=0;
}

server {

    listen   80;
    server_name {{ project_name }}.com; # your domain !!!! Edit here

    client_max_body_size 100M;

    access_log /var/www/{{ project_name }}/production/logs/nginx-access.log;
    error_log /var/www/{{ project_name }}/production/logs/nginx-error.log;

    location /static/ {
        alias   /var/www/{{ project_name }}/{{ project_name }}/static/;
    }

    location /media/ {
        alias   /var/www/{{ project_name }}/{{ project_name }}/static/media/;
    }

    location / {
        # an HTTP header important enough to have its own Wikipedia entry:
        #   http://en.wikipedia.org/wiki/X-Forwarded-For
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # pass the Host: header from the client right along so redirects
        # can be set properly within the Rack application
        proxy_set_header Host $http_host;

        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        proxy_redirect off;

        proxy_pass http://{{ project_name }};

    }

    # Error pages
    error_page 500 502 503 504 /500.html;
    #location = /500.html {
    #    root /webapps/hello_django/static/;
    #}
}